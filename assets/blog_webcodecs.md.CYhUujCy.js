import{f as e,a as o,o as r,m as a}from"./chunks/framework.KKJb7Q7q.js";const f=JSON.parse('{"title":"前端生成视频","description":"","frontmatter":{"title":"前端生成视频","create":"2024-03-07T00:00:00.000Z","desc":"通过 WebCodecs 在前端生成视频"},"headers":[],"relativePath":"blog/webcodecs.md","filePath":"blog/webcodecs.md"}'),t={name:"blog/webcodecs.md"},c=a('<p>Web 的能力与日俱增。我发现，它竟然可以直接生成视频。只需提供每一帧的图片，就能生成 MP4。</p><p>此前，若想通过图片生成视频，我只知道（没有用过）通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaStream" target="_blank" rel="noreferrer"><code>MediaStream</code></a> 获取 canvas 的视频流，然后用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaRecorder" target="_blank" rel="noreferrer"><code>MediaRecorder</code></a> 录制成视频。我想，此法有缺陷：视频多久就得绘制多久。</p><p>现在，我发现了 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebCodecs_API" target="_blank" rel="noreferrer">WebCodecs API</a>。我用之生成视频。MP4 需要封装，我使用 <a href="https://github.com/gpac/mp4box.js/" target="_blank" rel="noreferrer">mp4box.js</a> 实现，它用起来十分容易。</p><p>编码视频的方式，mp4box.js 有示例，很简单。只需注意 <a href="https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame" target="_blank" rel="noreferrer"><code>VideoFrame</code></a>：其构造需要提供 <code>timestamp</code> 为微秒的时间；其使用后要 <code>.close()</code>。</p><p>视频生成完毕后，从 mp4box.js 处可以获得 <code>ArrayBuffer</code>。届时可以生成 <code>Blob</code>，然后播放，或者继续生成 URL 以下载。</p>',5),d=[c];function s(l,p,_,n,b,i){return r(),o("div",null,d)}const h=e(t,[["render",s]]);export{f as __pageData,h as default};
