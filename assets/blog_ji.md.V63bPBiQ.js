import{_ as e,c as t,o as r,b as o}from"./chunks/framework.48Co6iSO.js";const f=JSON.parse('{"title":"编写「集」","description":"","frontmatter":{"title":"编写「集」","create":"2024-02-27T00:00:00.000Z","desc":"开发中的技术要点"},"headers":[],"relativePath":"blog/ji.md","filePath":"blog/ji.md"}'),p={name:"blog/ji.md"},a=o('<p>近日，我发布了<a href="https://zeng-y-l.github.io/ji/" target="_blank" rel="noreferrer">「集」游戏</a>，及其<a href="https://gitee.com/Zeng_YL/ji-gui" target="_blank" rel="noreferrer">界面源码</a>与<a href="https://gitee.com/Zeng_YL/ji-train" target="_blank" rel="noreferrer">训练源码</a>。本文简述其技术要点。</p><h2>训练</h2><p>使用 Rust 语言。</p><h3>智能</h3><p>智能非常简单：随机出。当然，不是完全随机。</p><p>首先，要根据权重随机出。权重根据我方和对方现有的集的数量决定。例如，如果我方没有集而对方有两个，则集的权重比较大。具体的权重，就是算法的参数，也是优化的目标。</p><p>其次，提前剔除<strong>一定不好</strong>的技能。例如，若双方都没有集，则不应出小防；若我方有五个集，则不应出集。以下是定义。<br> 某技能甲，对于任意技能乙，在对方所有技能下甲都不比乙<strong>应对更好</strong>，且对方出某个技能时乙比甲<strong>应对更好</strong>，则技能甲<strong>一定不好</strong>。<br> 技能甲和乙分别对战对方技能。甲赢乙输则甲比乙<strong>应对更好</strong>，同赢或同输则无好坏之分。若都不分输赢，则花费少者<strong>应对更好</strong>，花费一样则无好坏之分。</p><h3>智能实现</h3><p>权重使用简单的 <code>u8</code> 数组，附带一个映射用于查询数组索引。这使之可以非常方便地存进文件，无需序列化。</p><p>若技能出不了（集不够），或一定不好，则不存储。节省空间。</p><p>我规定，在我方和对方的集的数量一定的情况下，所有技能的权重之和为 255。于是，可以少存一个权重，加起来用 255 减它就是。</p><p>那个映射目前用 <code>EnumMap</code> 实现。我正在写一个库，准备替换掉。本应使用常量，遗憾，不支持。</p><h3>技能实现</h3><p>技能是写在代码中的，不可动态配置。但是用 trait 实现，可编译时配置。</p><p>对于技能胜负判定，我本想搞缓存。结果一看，发现直接用数组 <code>contains</code> 方法居然更快一点点。应该是编译器优化之故，真神奇。</p><p>技能的名字，十分 hack 地用了 <code>Debug</code>，方便直接 derive。</p><h3>遗传算法</h3><p>与<a href="https://gitee.com/Zeng_YL/ten-steps-10000-degrees/" target="_blank" rel="noreferrer">十步万度</a>的类似，加入混合而不只是变异。未经优化，十分朴实。懒得优化，能用就行。</p><h2>界面</h2><p>使用 Solid.js 框架，Vite 构建。</p><h3>字体</h3><p>字体占空间大。发现一个库，<a href="https://www.npmjs.com/package/font-slice" target="_blank" rel="noreferrer">font-slice</a>，类似谷歌的字体切片，看着不错，用之。</p><h3>竖排</h3><p>不少地滥用了 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/writing-mode" target="_blank" rel="noreferrer"><code>writing-mode</code></a> 做临时的竖排。Firefox 支持不佳，我只好手动设置尺寸。</p><h3>卡片</h3><p>平时只显示名字，需要时升起，全部显示。如何做到？</p><p>我令卡片的顶边为屏幕底部，完全使用 <code>transform</code> 控制位置。我写死名字的高度，平时上移名字的高度，升起时上移 100%。</p>',27),n=[a];function s(c,i,h,g,_,d){return r(),t("div",null,n)}const m=e(p,[["render",s]]);export{f as __pageData,m as default};
