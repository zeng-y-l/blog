import{_ as t,a as o,G as r,o as s}from"./chunks/framework.BpGr-ihe.js";const u=JSON.parse('{"title":"Rust 写不了链表？","description":"","frontmatter":{"title":"Rust 写不了链表？","create":"2023-11-20T00:00:00.000Z","desc":"不仅如此……"},"headers":[],"relativePath":"blog/rustlink.md","filePath":"blog/rustlink.md"}'),a={name:"blog/rustlink.md"};function c(p,e,d,n,_,l){return s(),o("div",null,e[0]||(e[0]=[r("<p>常常有人说：Rust 写不了链表。严谨地说，写不了安全、零开销的双链表。</p><p>无可辩驳，这是对的。不仅如此，<code>Vec</code> 等容器也无法写得安全、零开销。它们都需要更精细地控制内存。</p><p>不过，惊<ruby>喜<rt>xià</rt></ruby>还有更多。有的东西看着如同库函数，实则是编译器开洞。自己即便用了 <code>unsafe</code>，也写不了！</p><p>解引用 <code>Box</code> 可以移出其中的值。而 <code>DerefMove</code> trait 尚不存在，自己写不了。</p><p><code>UnsafeCell</code> 允许从不可变引用中获取可变引用。如果不使用它，那就是未定义行为，即便保证不同时访问也一样。</p><p>如此之类，应该还有很多。我也不懂，读者可自行寻找。</p>",6)]))}const f=t(a,[["render",c]]);export{u as __pageData,f as default};
