import{_ as i,a,G as t,o as e}from"./chunks/framework.BpGr-ihe.js";const o=JSON.parse('{"title":"浮点数性质测试","description":"","frontmatter":{"title":"浮点数性质测试","create":"2025-01-18T00:00:00.000Z","desc":"随机生成数据，测试浮点数的性质"},"headers":[],"relativePath":"blog/numtest.md","filePath":"blog/numtest.md"}'),n={name:"blog/numtest.md"};function h(p,s,l,k,r,d){return e(),a("div",null,s[0]||(s[0]=[t(`<p>浮点数的运算规律，常常反直觉。为了方便，我写了个<a href="https://zeng-y-l.github.io/project/numtest.html" target="_blank" rel="noreferrer">浮点数性质测试</a>，通过生成大量随机数据来测试浮点数的性质，常常能够很快找到反例。</p><p>为了方便，我写了个 DSL，使用 <a href="https://matklad.github.io/2020/04/13/simple-but-powerful-pratt-parsing.html" target="_blank" rel="noreferrer">Pratt</a> 解析器，编译到 JS，在 <code>Worker</code> 中执行。DSL 能够自动收集变量，自动随机生成之。也可以直接使用 <code>Math</code> 下的函数。还加了点语法糖，<code>^</code> 是 <code>**</code> 的语法糖，<code>=</code> 是 <code>Object.is</code> 的语法糖。后者在判断 <code>NaN</code> 和 <code>-0</code> 时很有必要。</p><p>你是否知道，以下这些都是错误的？测试之，可以很快找到反例。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div>`,4)]))}const g=i(n,[["render",h]]);export{o as __pageData,g as default};
